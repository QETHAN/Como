<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<title>Como.Dialog</title>
	<meta name="Keywords" content="Como Dialog" />
	<meta name="Description" content="Como Dialog" />
	<link type="text/css" rel="stylesheet" href="../plugin.css" />
	<script type="text/javascript" src="../Como.unpack.js"></script>
</head>
<body>

<div class="packBody">
	<div class="packTitle">
		Como.Dialog
	</div>

	<div class="packVersion">V1.0</div>

	<div class="packDesc">
		组件简介：提供对话框的组件，可以定制UI样式
	</div>
	
	<div class="packAuthor">
		开发者： <span>KevinComo@gmail.com</span>
	</div>

	<div class="defaultDemo">
		<a href="demo/demo1.html" target="_blank">示例1</a>
		<a href="demo/demo2.html" target="_blank">示例2</a>
		<a href="demo/demo3.html" target="_blank">示例3</a>
	</div>

	<div class="packStart">
		<div class="panel">
			<pre>var dialog = new Como.Dialog(options);</pre>
		</div>
	</div>

	<div class="packAPI">
		<div class="options">
			<h2 >Options配置</h2>
			<div class="panel">
				<table border="1">
					<tr>
						<th>Name</th><th>Data Type</th><th>Default Value</th><th>Description</th><th>Must</th><th>Note</th>
					</tr>
					<tr>
						<td>title</td><td>String</td><td>提示</td><td>对话框显示标题</td><td></td><td></td>
					</tr>
					<tr>
						<td>body</td><td>String</td><td></td><td>对话框显示内容</td><td></td><td></td>
					</tr>
					<tr>
						<td>width</td><td>Number</td><td>465</td><td>对话框宽度</td><td></td><td></td>
					</tr>
					<tr>
						<td>className</td><td>String</td><td></td><td>对话框添加的样式名</td><td></td><td></td>
					</tr>
					<tr>
						<td>closeButton</td><td>Bool</td><td>true</td><td>是否有右上角关闭按钮</td><td></td><td></td>
					</tr>
					<tr>
						<td>mask</td><td>Bool</td><td>true</td><td>是否显示遮罩</td><td></td><td></td>
					</tr>
					<tr>
						<td>fadeIn</td><td>Number</td><td>0</td><td>对话框的渐显时间</td><td></td><td></td>
					</tr>
					<tr>
						<td>fadeOut</td><td>Number</td><td>100</td><td>对话框的渐隐时间</td><td></td><td></td>
					</tr>
					<tr>
						<td>parent</td><td>Element</td><td>document.body</td><td>对话框容器的存放位置</td><td></td><td></td>
					</tr>
					<tr>
						<td>template</td><td>Object</td><td>...</td><td>对话框的模板样式</td><td></td><td></td>
					</tr>
					<tr>
						<td>btnClose</td><td>Function</td><td>null</td><td>右上角点击时的触发事件</td><td></td><td>this</td>
					</tr>
					<tr>
						<td>onClose</td><td>Function</td><td>null</td><td>对话框Close时触发事件</td><td></td><td>this</td>
					</tr>
					<tr>
						<td>onShow</td><td>Function</td><td>null</td><td>对话框显示时触发事件</td><td></td><td>this</td>
					</tr>
					<tr>
						<td>onHide</td><td>Function</td><td>null</td><td>对话框隐藏时触发事件</td><td></td><td>this</td>
					</tr>
				</table>
			</div>
		</div>

		<div class="dynamicProp">
			<h2 >动态属性</h2>
			<div class="panel">
				<table border="1">
					<tr>
						<th>Name</th><th>Data Type</th><th>Description</th>
					</tr>
					<tr>
						<td>els</td><td>Object</td><td>存储的Dom对象集合：</td>
					</tr>
					<tr>
						<td>id</td><td>Number</td><td>对话框实例ID号</td>
					</tr>
				</table>
			</div>
		</div>

		<div class="dynamicFunc">
			<h2 >动态方法</h2>
			<div class="panel">
				<table border="1">
					<tr>
						<th>Name</th><th>Params</th><th>Return</th><th>Description</th><th>Note</th>
					</tr>
					<tr>
						<td>setTitle</td><td>String</td><td>this</td><td>对应Options</td><td></td>
					</tr>
					<tr>
						<td>setWidth</td><td>Number</td><td>this</td><td>同上</td><td></td>
					</tr>
					<tr>
						<td>setCloseButton</td><td>Bool</td><td>this</td><td>同上</td><td></td>
					</tr>
					<tr>
						<td>setMask</td><td>Bool</td><td>this</td><td>同上</td><td></td>
					</tr>
					<tr>
						<td>setFadeIn</td><td>Number</td><td>this</td><td>同上</td><td></td>
					</tr>
					<tr>
						<td>setFadeOut</td><td>Number</td><td>this</td><td>同上</td><td></td>
					</tr>
					<tr>
						<td>setTemplate</td><td>Object</td><td>this</td><td>同上</td><td></td>
					</tr>
					<tr>
						<td>setOnClose</td><td>Function</td><td>this</td><td>同上</td><td></td>
					</tr>
					<tr>
						<td>setOnShow</td><td>Function</td><td>this</td><td>同上</td><td></td>
					</tr>
					<tr>
						<td>setOnHide</td><td>Function</td><td>this</td><td>同上</td><td></td>
					</tr>
					<tr>
						<td>setOnClose</td><td>Function</td><td>this</td><td>同上</td><td></td>
					</tr>
					<tr>
						<td>setButtons</td><td>Object || [Object]</td><td>this</td><td>设置对话框按钮</td><td>参数为按钮对象或按钮对象数组，如Como.Dialog.OK</td>
					</tr>
					<tr>
						<td>setBtnDisabled</td><td>String</td><td>this</td><td>设置某个按钮为Disabled状态</td><td></td>
					</tr>
					<tr>
						<td>setBtnUnDisabled</td><td>String</td><td>this</td><td>去掉某个按钮的Disabled状态</td><td></td>
					</tr>
					<tr>
						<td>setHandler</td><td>String || [String], Function</td><td>this</td><td>设置点击按钮的事件</td><td>setHandler(['close', 'cancel'], function(){})</td>
					</tr>
					<tr>
						<td>setLoading</td><td>String</td><td>this</td><td>设置对话框的Loading状态</td><td>参数为显示的字符</td>
					</tr>
					<tr>
						<td>setBody</td><td>String || Element</td><td>this</td><td>设置对话框的Body内容</td><td></td>
					</tr>
					<tr>
						<td>setFocus</td><td>String</td><td>this</td><td>设置某个按钮的Focus状态</td><td>setFocus('ok')</td>
					</tr>
					<tr>
						<td>getButton</td><td>String || null</td><td>Como Element</td><td>获取某个或全部按钮元素</td><td>getButton('ok')</td>
					</tr>
					<tr>
						<td>getBody</td><td></td><td>Como Element</td><td>获取Body元素</td><td></td>
					</tr>
					<tr>
						<td>show</td><td></td><td>this</td><td>显示Dialog</td><td>更改title,body,buttons后只有通过show时才会生效</td>
					</tr>
					<tr>
						<td>hide</td><td></td><td>this</td><td>隐藏Dialog</td><td></td>
					</tr>
					<tr>
						<td>close</td><td></td><td>this</td><td>关闭Dialog</td><td></td>
					</tr>
				</table>
			</div>
		</div>
		
		<div class="staticProp">
			<h2 >静态属性</h2>
			<div class="panel">
				<table border="1">
					<tr>
						<th>Name</th><th>Data Type</th><th>Description</th>
					</tr>
					<tr>
						<td>Dialogs</td><td>Object</td><td>存储当前页面上的Dialog实例，Key为ID号</td>
					</tr>
					<tr>
						<td>Showing</td><td>Object</td><td>页面中正在显示的Dialog实例</td>
					</tr>
					<tr>
						<td>OK</td><td>Object</td><td>确定按钮</td>
					</tr>
					<tr>
						<td>CANCEL</td><td>Object</td><td>取消按钮</td>
					</tr>
					<tr>
						<td>CLOSE</td><td>Object</td><td>关闭按钮</td>
					</tr>
					<tr>
						<td>SAVE</td><td>Object</td><td>保存按钮</td>
					</tr>
					<tr>
						<td>SUBMIT</td><td>Object</td><td>提交按钮</td>
					</tr>
					<tr>
						<td>DELETE</td><td>Object</td><td>删除按钮</td>
					</tr>
					<tr>
						<td>OK_AND_CANCEL</td><td>Array</td><td>确定+取消按钮</td>
					</tr>
					<tr>
						<td>DELETE_AND_CANCEL</td><td>Array</td><td>删除+取消按钮</td>
					</tr>
				</table>
			</div>
		</div>

		<div class="staticFunc">
			<h2 >静态方法</h2>
			<div class="panel">
				<table border="1">
					<tr>
						<th>Name</th><th>Params</th><th>Return</th><th>Description</th>
					</tr>
					<tr>
						<td>newButton</td><td>name, label[, className, handler]</td><td>Object</td><td>声明一个Button</td>
					</tr>
					<tr>
						<td>getDialogEl</td><td>Element</td><td>Element</td><td>获取元素所在的Dialog顶层容器</td>
					</tr>
					<tr>
						<td>getDialog</td><td>Element</td><td>Dialog实例</td><td>获取元素所在的Dialog的实例</td>
					</tr>
					<tr>
						<td>alert</td><td>String || Object</td><td>Dialog实例</td><td>window.alert的实现</td>
					</tr>
					<tr>
						<td>confirm</td><td>Object</td><td>Dialog实例</td><td>window.confirm的实现</td>
					</tr>
					<tr>
						<td>loading</td><td>String</td><td>Dialog实例</td><td>实现一个Loading对话框效果</td>
					</tr>
					<tr>
						<td>ajax</td><td>url, options</td><td>Dialog实例</td><td>实现对话框加载Ajax内容效果</td>
					</tr>
				</table>
			</div>
		</div>
	</div>

	<div class="packDemo">
		<h2 >Use & Demo</h2>
		<div class="item">
			<h3>Create</h3>
			<p>创建一个Dialog，点击按钮更换Body显示内容。</p>
			<p><a href="demo/demo1.html" target="_blank">查看示例</a></p>
<pre>var dialog = new Como.Dialog({
	title: 'this is title',
	body: 'this is body'
}).setButtons(Como.Dialog.OK_AND_CANCEL).setHandler('ok', function(d){
	d.setBody('you have clicked OK.').show();
}).setHandler('cancel', function(d){
	d.setBody('you have clicked CANCEL.').show();
}).show().setFocus('ok');</pre>
		</div>

		<div class="item">
			<h3>Alert</h3>
			<div class="panel">
				alert支持直接提供String或Options做为参数；<br/>
				Options方式：
				<table border="1">
					<tr><th>name</th><th>Type</th><th>Default</th><th>Description</th></tr>
					<tr><td>title</td><td>String</td><td>提示</td><td>对话框标题</td></tr>
					<tr><td>str</td><td>String</td><td></td><td>内容</td></tr>
					<tr><td>callback</td><td>Function</td><td>null</td><td>确定时触发事件</td></tr>
				</table>
			</div>
			<p><a href="demo/demo2.html" target="_blank">查看示例</a></p>
<pre>Como.Dialog.alert({
	str: 'You must love me.',
	callback: function(){
		Como.Dialog.alert('Thanks.');
	}
});</pre>
		</div>

		<div class="item">
			<h3>Confirm</h3>
			<div class="panel">
				Options参数：
				<table border="1">
					<tr><th>name</th><th>Type</th><th>Default</th><th>Description</th></tr>
					<tr><td>title</td><td>String</td><td>提示</td><td>对话框标题</td></tr>
					<tr><td>str</td><td>String</td><td></td><td>内容</td></tr>
					<tr><td>yes</td><td>Function</td><td>null</td><td>确定时触发事件</td></tr>
					<tr><td>no</td><td>Function</td><td>null</td><td>否定时触发事件</td></tr>
				</table>
			</div>
			<p><a href="demo/demo3.html" target="_blank">查看示例</a></p>
<pre>Como.Dialog.confirm({
	str: 'do you love me?',
	yes: function(){
		Como.Dialog.alert('Thanks, i love you too.');
	},
	no: function(){
		Como.Dialog.alert('Oh, i want to cry.');
	}
});</pre>
		</div>

		<div class="item">
			<h3>Loading</h3>
			<p>实现Loading对话框</p>
			<p><a href="demo/demo4.html" target="_blank">查看示例</a></p>
<pre>Como.include('dialog/core.js', function(){
	Como.Dialog.loading('please wait...');
});</pre>
		</div>

		<div class="item">
			<h3>Ajax</h3>
			<p>实现对话框读取ajax请求中的内容</p>
			<div class="panel">
				Como.Dialog.ajax(url, options); <br/>
				Options参数配置：
				<table border="1">
					<tr><th>name</th><th>Type</th><th>Default</th><th>Description</th></tr>
					<tr><td>loadingTxt</td><td>String</td><td>loading...</td><td>加载时显示的文字</td></tr>
					<tr><td>width</td><td>Number</td><td>400</td><td>宽度</td></tr>
					<tr><td>title</td><td>String</td><td>提示</td><td>对话框标题</td></tr>
					<tr><td>method</td><td>String</td><td>get</td><td>Ajax 请求方式</td></tr>
					<tr><td>format</td><td>String</td><td>json</td><td>Ajax请求的数据格式</td></tr>
					<tr><td>data</td><td>String</td><td>null</td><td>Ajax请求参数</td></tr>
					<tr><td>getView</td><td>Function</td><td>Param: [Ajax数据, 对话框实例]</td><td>请求完成后，处理显示在对话框上的数据</td></tr>
					<tr><td>onSuccess</td><td>Function</td><td>Param:[对话框实例]</td><td>全部成功完成后执行</td></tr>
					<tr><td>onFailure</td><td>Function</td><td>Param:[对话框实例]</td><td>ajax请求失败执行</td></tr>
					<tr><td>onWhatever</td><td>Function</td><td></td><td>成功与否都执行</td></tr>
				</table>
			</div>
			<p><a href="demo/demo5.html" target="_blank">查看示例</a></p>
<pre>Como.Dialog.ajax('ajax.html', {
	format: 'text',
	getView: function(data){
		return data;
	}
});</pre>
		</div>
	</div>
</div>
<script type="text/javascript">
window.pageHeight = Como(document.body).height();
</script>
</body>
</html>